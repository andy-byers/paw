-- string.paw

{
    assert(!'')
    assert('s')
    assert(!!'s')

    assert('str'.clone() == 'str')
}

{
    let str = 'abcdef'
    assert(str.starts_with('abcdef'))
    assert(str.starts_with('abcde'))
    assert(str.starts_with('abc'))
    assert(str.starts_with('a'))
    assert(str.starts_with(''))
    assert(str.ends_with('abcdef'))
    assert(str.ends_with('bcdef'))
    assert(str.ends_with('def'))
    assert(str.ends_with('f'))
    assert(str.ends_with(''))
    assert(!str.starts_with('bcdef'))
    assert(!str.starts_with('abcdf'))
    assert(!str.starts_with('abd'))
    assert(!str.starts_with('ac'))
    assert(!str.ends_with('abcde'))
    assert(!str.ends_with('acdef'))
    assert(!str.ends_with('cef'))
    assert(!str.ends_with('df'))
}

//{
//    let s = 'abc'
//    assert(s[:] == 'abc')    
//    assert(s[:null] == 'abc')    
//    assert(s[null:] == 'abc')    
//    assert(s[null:null] == 'abc')    
//    assert(s[0:#s] == 'abc')    
//
//    assert(s[:-1] == 'ab')
//    assert(s[:#s-1] == 'ab')
//    assert(s[:-2] == 'a')
//    assert(s[:#s-2] == 'a')
//    assert(s[:-3] == '')
//    assert(s[:#s-3] == '')
//
//    assert(s[1:] == 'bc')
//    assert(s[-2:] == 'bc')
//    assert(s[2:] == 'c')
//    assert(s[-1:] == 'c')
//    assert(s[3:] == '')
//    assert(s[0:0] == '') 
//
//    -- clamped
//    assert(s[4:] == '')
//    assert(s[:-4] == '')
//}

-- String find:
{
    fn check(s: string, sub: string, n: int) {
        assert(n == s.find(sub))
    }
    check('abc', 'a', 0)
    check('abc', 'b', 1)
    check('abc', 'c', 2)
    check('abc', 'd', -1)
}

//-- String split/join:
//{
//    fn check(s, sep, parts) {
//        let a = s.split(sep)
//        for i = 0, #a {
//            assert(a[i] == parts[i])
//        }
//        assert(#a == #parts)
//        let result = sep.join(a)
//        assert(result == s);
//    }
//    check('abc', 'a', ['', 'bc'])
//    check('abc', 'b', ['a', 'c'])
//    check('abc', 'c', ['ab', ''])
//    check('abc', 'd', ['abc'])
//
//    let a = ',a,,b,,,c,,,,d,,,,,e,,,,,,'.split(',')
//    assert(''.join(a) == 'abcde')
//}

