// Translated from https://github.com/attractivechaos/plb2/blob/master/src/lua/matmul.lua

fn matgen(n: int) -> [[float]] {
	let tmp = 1.0 /
              n as float /
              n as float;
	let a = [];
	for i = 0, n {
        let b = [];
		for j = 0, n {
            let x = tmp
                  * (i - j) as float
                  * (i + j) as float;
            b.push(x);
		}
        a.push(b);
	}
	return a;
}

fn matmul(n: int, a: [[float]], b: [[float]]) -> [[float]] {
	let c = [];
	for i = 0, n {
		let ci = [];
		for j = 0, n {
            ci.push(0.0);
        }
		for k = 0, n {
            let aik = a[i][k];
            let bk = b[k];
			for j = 0, n {
				ci[j] = ci[j] + aik * bk[j];
			}
		}
        c.push(ci);
	}
	return c;
}

pub fn main(args: [str]) {
    let n = 100;
    if #args > 1 {
        n = args[1].parse_int(10);
    }
    let a = matgen(n);
    let b = matgen(n);
    let c = matmul(n, a, b);
    let r = c[n / 2][n / 2];

    print(r.to_string()); // TODO: concatenate
    print('\n');
}
