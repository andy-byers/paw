// bubble.paw

fn random(n: int) -> [int] {
    let a = [];
    let x = n;
    while #a < n {
        x = (140_671_485 * x + 12_820_163) % 16_777_216;
        a.push(x);
    }
    return a;
}

fn bubble(n: int) -> [int] {
    let a = random(n);
    while true {
        let swapped = false;
        let i = 1;
        while i < n {
            if a[i] < a[i - 1] {
                let t = a[i];
                a[i] = a[i - 1];
                a[i - 1] = t;
                swapped = true;
            }
            i = i + 1;
        }
        if !swapped {
            break;
        }
    }
    return a;
}

pub fn main(args: [str]) -> int {
    let n = if #args > 1 {
        args[1].parse_int().unwrap()
    } else {
        500
    };
    bubble(n);
    return 0;
}
