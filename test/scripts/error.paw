-- error.paw

fn check_error(code) {
    fn f(code) {
        load(code)()
    }
    assert(0 != try(f, code))
}

-- Relational comparison errors:
{
    check_error('let x = 1 < "a"')
    check_error('let x = "a" < 1')
}

-- Name too long:
{
    let name = 'a' * 1000
    check_error('let ' ++ name)
}

-- For loop errors:
{
    check_error('for i = 0,10,0 {}')
    --check_error('for i = 0.0,10,1 {}')
    --check_error('for i = 0,10.0,1 {}')
    --check_error('for i = 0,10,1.0 {}')
    --check_error('for i = 1<<100,1,1 {}')
    --check_error('for i = 1,1<<100,1 {}')
    --check_error('for i = 1,1,1<<100 {}')
}

-- Conversion errors:
{
    check_error('let x = int([])')
    check_error('let x = float([])')
    -- '1.0' is not a valid integer string. int(1.0) works fine,
    -- however, since 1.0 is a float.
    check_error('let x = int("1.0")')
    assert(int(1.0) == 1)
}
